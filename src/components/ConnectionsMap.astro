---
export interface Props {
  connections: string[];
  currentSlug: string;
  type: 'research' | 'frameworks' | 'notes';
}

const { connections = [], currentSlug, type } = Astro.props;
---

<div class="connections-map" id="connections-map">
  <h4 class="connections-title">Knowledge Connections</h4>
  
  {connections.length > 0 ? (
    <div class="connections-grid">
      {connections.map((connection) => (
        <button 
          class="connection-node"
          hx-get={`/api/connections/${type}/${connection}`}
          hx-target="#connection-preview"
          hx-swap="innerHTML"
          data-connection={connection}
        >
          {connection.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase())}
        </button>
      ))}
    </div>
  ) : (
    <p class="no-connections">No explicit connections yet. This content may connect to others through tags or themes.</p>
  )}
  
  <div id="connection-preview" class="connection-preview">
    <p class="preview-hint">Click a connection above to explore related content</p>
  </div>
  
  <div class="explore-more">
    <button 
      class="explore-button"
      hx-get={`/api/graph/${type}/${currentSlug}`}
      hx-target="#knowledge-graph"
      hx-swap="innerHTML"
    >
      ðŸ”— Explore Full Knowledge Graph
    </button>
  </div>
  
  <div id="knowledge-graph" class="knowledge-graph hidden">
    <!-- Dynamic knowledge graph will load here -->
  </div>
</div>

<style>
  .connections-map {
    background: var(--surface);
    border: 1px solid var(--secondary);
    border-radius: 0.5rem;
    padding: 1.5rem;
    margin: 2rem 0;
  }

  .connections-title {
    font-family: var(--font-serif);
    font-size: 1.25rem;
    color: var(--primary);
    margin: 0 0 1rem 0;
    border-bottom: 2px solid var(--accent);
    padding-bottom: 0.5rem;
  }

  .connections-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .connection-node {
    background: var(--accent);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    cursor: pointer;
    font-size: 0.875rem;
    transition: all 0.2s ease;
    position: relative;
  }

  .connection-node:hover {
    background: var(--primary);
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .connection-node:active {
    transform: translateY(0);
  }

  .no-connections {
    color: var(--secondary);
    font-style: italic;
    margin-bottom: 1.5rem;
  }

  .connection-preview {
    background: var(--bg);
    border: 1px solid var(--secondary);
    border-radius: 0.375rem;
    padding: 1rem;
    margin-bottom: 1.5rem;
    min-height: 60px;
    transition: all 0.3s ease;
  }

  .preview-hint {
    color: var(--secondary);
    font-style: italic;
    margin: 0;
  }

  .explore-more {
    text-align: center;
  }

  .explore-button {
    background: var(--surface);
    color: var(--accent);
    border: 2px solid var(--accent);
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .explore-button:hover {
    background: var(--accent);
    color: white;
  }

  .knowledge-graph {
    margin-top: 1.5rem;
    padding: 1rem;
    background: var(--bg);
    border: 1px solid var(--secondary);
    border-radius: 0.375rem;
    transition: all 0.3s ease;
  }

  .knowledge-graph.hidden {
    display: none;
  }

  .knowledge-graph:not(.hidden) {
    display: block;
    animation: fadeIn 0.3s ease;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Systems mode enhancements */
  .systems .connections-map {
    border-color: var(--accent);
    box-shadow: 0 2px 8px rgba(6, 182, 212, 0.1);
  }

  .systems .connection-node {
    background: linear-gradient(135deg, var(--accent), var(--primary));
  }

  .systems .connection-node:hover {
    background: linear-gradient(135deg, var(--primary), var(--accent));
  }

  @media (max-width: 768px) {
    .connections-grid {
      flex-direction: column;
    }
    
    .connection-node {
      text-align: left;
    }
  }
</style>