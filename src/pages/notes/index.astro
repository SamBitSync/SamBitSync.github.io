---
import BaseLayout from '../../layouts/BaseLayout.astro';
---

<BaseLayout 
  title="Notes | Sambit Maps" 
  description="Ongoing thoughts, connections, and explorations across complexity science and epistemology"
  mode="academic"
>
  <div class="notes-header">
    <h1>Notes & Thoughts</h1>
    <p class="notes-subtitle">
      Ongoing explorations, connections, and half-formed ideas across philosophy of science, complexity, and methodology.
    </p>
    
    <div class="notes-meta">
      <div class="meta-item">
        <span class="meta-label">Total Notes:</span>
        <span class="meta-value">2</span>
      </div>
      <div class="meta-item">
        <span class="meta-label">Frameworks:</span>
        <span class="meta-value">1</span>
      </div>
      <div class="meta-item">
        <span class="meta-label">Synthesis:</span>
        <span class="meta-value">1</span>
      </div>
    </div>
  </div>

  <div class="filter-controls">
    <div class="filter-group">
      <label for="type-filter">Filter by Type:</label>
      <select id="type-filter" name="type">
        <option value="">All Types</option>
        <option value="atomic">Atomic</option>
        <option value="synthesis">Synthesis</option>
        <option value="question">Question</option>
        <option value="observation">Observation</option>
      </select>
    </div>
    
    <div class="filter-group">
      <label for="confidence-filter">Filter by Confidence:</label>
      <select id="confidence-filter" name="confidence">
        <option value="">All Confidence Levels</option>
        <option value="speculation">Speculation</option>
        <option value="working-hypothesis">Working Hypothesis</option>
        <option value="established">Established</option>
      </select>
    </div>
  </div>

  <div id="notes-results" class="notes-results">
    <section class="notes-section">
      <h2 class="section-title">
        Recent Notes
        <span class="notes-count">(2)</span>
      </h2>
      
      <div class="notes-grid">
        <article class="note-card" data-type="synthesis" data-confidence="working-hypothesis">
          <div class="card-header">
            <div class="card-meta">
              <span class="type-badge" data-type="synthesis">synthesis</span>
              <span class="confidence-badge" data-confidence="working-hypothesis">working-hypothesis</span>
            </div>
            <time class="card-date">August 16, 2025</time>
          </div>
          
          <h3 class="card-title">
            <a href="/notes/critical-realism">Critical Realism and Layered Ontology</a>
          </h3>
          
          <p class="card-description">Critical realism offers a stratified ontology that distinguishes between the empirical, actual, and real domains. This framework provides a middle path between naive empiricism and constructivism, particularly useful for research spanning cultures and disciplines.</p>
          
          <div class="card-tags">
            <span class="note-tag">critical-realism</span>
            <span class="note-tag">philosophy-of-science</span>
            <span class="note-tag">ontology</span>
            <span class="note-tag">methodology</span>
          </div>
          
          <div class="card-connections">
            <h4>Connected to:</h4>
            <div class="connection-links">
              <a href="/notes/emergence-vs-reduction" class="connection-link">emergence-vs-reduction</a>
              <span class="connection-link">interpretive-social-science</span>
              <span class="connection-link">methodological-pluralism</span>
            </div>
          </div>
        </article>

        <article class="note-card" data-type="synthesis" data-confidence="working-hypothesis">
          <div class="card-header">
            <div class="card-meta">
              <span class="type-badge" data-type="synthesis">synthesis</span>
              <span class="confidence-badge" data-confidence="working-hypothesis">working-hypothesis</span>
            </div>
            <time class="card-date">August 15, 2025</time>
          </div>
          
          <h3 class="card-title">
            <a href="/notes/emergence-vs-reduction">Emergence vs. Reductionism in Complex Systems</a>
          </h3>
          
          <p class="card-description">The emergence vs. reductionism debate reflects a deeper methodological question about appropriate levels of analysis. Context-dependent pluralism suggests choosing analytical levels based on predictive goals and causal efficacy rather than philosophical commitment.</p>
          
          <div class="card-tags">
            <span class="note-tag">emergence</span>
            <span class="note-tag">reductionism</span>
            <span class="note-tag">complex-systems</span>
            <span class="note-tag">philosophy-of-science</span>
          </div>
          
          <div class="card-connections">
            <h4>Connected to:</h4>
            <div class="connection-links">
              <span class="connection-link">complexity-pluralism</span>
              <span class="connection-link">systems-thinking</span>
              <span class="connection-link">methodological-pluralism</span>
            </div>
          </div>
        </article>
      </div>
    </section>
  </div>
</BaseLayout>

<style>
  .notes-header {
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 2px solid var(--accent);
  }

  .notes-header h1 {
    font-family: var(--font-serif);
    font-size: 3rem;
    color: var(--primary);
    margin-bottom: 1rem;
  }

  .notes-subtitle {
    max-width: 700px;
    margin: 0 auto 2rem auto;
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--secondary);
    font-style: italic;
  }

  .notes-meta {
    display: flex;
    justify-content: center;
    gap: 2rem;
    flex-wrap: wrap;
  }

  .meta-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.25rem;
  }

  .meta-label {
    font-size: 0.875rem;
    color: var(--secondary);
  }

  .meta-value {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--accent);
  }

  .filter-controls {
    display: flex;
    gap: 2rem;
    margin-bottom: 3rem;
    padding: 1.5rem;
    background: var(--surface);
    border: 1px solid var(--secondary);
    border-radius: 0.5rem;
    flex-wrap: wrap;
  }

  .filter-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    min-width: 200px;
  }

  .filter-group label {
    font-weight: 500;
    color: var(--primary);
    font-size: 0.875rem;
  }

  .filter-group select {
    padding: 0.5rem;
    border: 1px solid var(--secondary);
    border-radius: 0.375rem;
    background: var(--bg);
    color: var(--primary);
    cursor: pointer;
  }

  .notes-section {
    margin-bottom: 3rem;
  }

  .section-title {
    font-family: var(--font-serif);
    font-size: 1.75rem;
    color: var(--primary);
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .notes-count {
    font-size: 1rem;
    color: var(--secondary);
    font-weight: 400;
  }

  .notes-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
  }

  .note-card {
    background: var(--surface);
    border: 1px solid var(--secondary);
    border-radius: 0.75rem;
    padding: 2rem;
    transition: all 0.3s ease;
    position: relative;
  }

  .note-card:hover {
    border-color: var(--accent);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transform: translateY(-2px);
  }

  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
  }

  .card-meta {
    display: flex;
    gap: 0.5rem;
  }

  .type-badge, .confidence-badge {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-weight: 500;
  }

  .type-badge[data-type="atomic"] {
    background: #e0e7ff;
    color: #3730a3;
  }

  .type-badge[data-type="synthesis"] {
    background: #f0fdf4;
    color: #15803d;
  }

  .confidence-badge {
    background: var(--bg);
    color: var(--secondary);
    border: 1px solid var(--secondary);
  }

  .card-date {
    font-size: 0.875rem;
    color: var(--secondary);
  }

  .card-title {
    margin: 0 0 1rem 0;
    font-size: 1.375rem;
    line-height: 1.3;
  }

  .card-title a {
    color: var(--primary);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .card-title a:hover {
    color: var(--accent);
  }

  .card-description {
    color: var(--secondary);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .card-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.375rem;
    margin-bottom: 1.5rem;
  }

  .note-tag {
    background: var(--bg);
    color: var(--secondary);
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    border: 1px solid var(--secondary);
  }

  .card-connections {
    border-top: 1px solid var(--secondary);
    padding-top: 1rem;
  }

  .card-connections h4 {
    font-size: 0.875rem;
    color: var(--primary);
    margin: 0 0 0.5rem 0;
    font-weight: 600;
  }

  .connection-links {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .connection-link {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    background: var(--accent);
    color: white;
    text-decoration: none;
    transition: opacity 0.2s ease;
  }

  .connection-link:hover {
    opacity: 0.8;
  }

  .no-results {
    text-align: center;
    padding: 3rem;
    color: var(--secondary);
    font-style: italic;
  }

  @media (max-width: 768px) {
    .notes-header h1 {
      font-size: 2.5rem;
    }
    
    .notes-grid {
      grid-template-columns: 1fr;
    }
    
    .filter-controls {
      flex-direction: column;
      gap: 1rem;
    }
    
    .notes-meta {
      gap: 1rem;
    }
  }
</style>

<script>
console.log('Notes page script loading...');

function filterNotes() {
  console.log('filterNotes called');
  const typeFilter = document.getElementById('type-filter').value;
  const confidenceFilter = document.getElementById('confidence-filter').value;
  
  console.log('Filters:', { typeFilter, confidenceFilter });
  
  const cards = document.querySelectorAll('.note-card');
  const section = document.querySelector('.notes-section');
  let visibleCount = 0;
  
  console.log('Found cards:', cards.length);
  
  cards.forEach(card => {
    const cardType = card.getAttribute('data-type');
    const cardConfidence = card.getAttribute('data-confidence');
    
    console.log('Card data:', { cardType, cardConfidence });
    
    let showCard = true;
    
    // Apply type filter
    if (typeFilter && typeFilter !== '' && cardType !== typeFilter) {
      showCard = false;
    }
    
    // Apply confidence filter
    if (confidenceFilter && confidenceFilter !== '' && cardConfidence !== confidenceFilter) {
      showCard = false;
    }
    
    console.log('Show card:', showCard);
    
    if (showCard) {
      card.style.display = 'block';
      visibleCount++;
    } else {
      card.style.display = 'none';
    }
  });
  
  console.log('Visible count:', visibleCount);
  
  // Update count in section title
  const countSpan = section.querySelector('.notes-count');
  if (countSpan) {
    countSpan.textContent = `(${visibleCount})`;
  }
  
  // Show/hide section and show no results message
  const resultsContainer = document.getElementById('notes-results');
  if (visibleCount === 0) {
    section.style.display = 'none';
    let noResults = document.querySelector('.no-results');
    if (!noResults) {
      noResults = document.createElement('div');
      noResults.className = 'no-results';
      noResults.innerHTML = '<p>No notes match the selected filters.</p>';
      resultsContainer.appendChild(noResults);
    }
    noResults.style.display = 'block';
  } else {
    section.style.display = 'block';
    const noResults = document.querySelector('.no-results');
    if (noResults) {
      noResults.style.display = 'none';
    }
  }
}

// Add event listeners
document.addEventListener('DOMContentLoaded', function() {
  console.log('DOM loaded, setting up event listeners');
  
  const typeFilter = document.getElementById('type-filter');
  const confidenceFilter = document.getElementById('confidence-filter');
  
  console.log('Found elements:', { typeFilter: !!typeFilter, confidenceFilter: !!confidenceFilter });
  
  if (typeFilter) {
    typeFilter.addEventListener('change', filterNotes);
    console.log('Type filter listener added');
  }
  
  if (confidenceFilter) {
    confidenceFilter.addEventListener('change', filterNotes);
    console.log('Confidence filter listener added');
  }
});

console.log('Notes page script loaded');
</script>