---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const notesEntries = await getCollection('notes');
  return notesEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout 
  title={`${entry.data.title} | Notes`} 
  description={entry.data.title}
  mode="academic"
>
  <article class="note-article">
    <div class="article-header">
      <div class="breadcrumb">
        <a href="/notes">← Back to Notes</a>
      </div>
      
      <div class="article-meta">
        <div class="meta-badges">
          <span class="type-badge" data-type={entry.data.type}>
            {entry.data.type}
          </span>
          <span class="confidence-badge" data-confidence={entry.data.confidence}>
            {entry.data.confidence}
          </span>
        </div>
        <time class="article-date">
          {entry.data.date.toLocaleDateString('en-US', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
          })}
        </time>
      </div>
      
      <h1 class="article-title">{entry.data.title}</h1>
      
      <div class="article-details">
        <div class="detail-section">
          <h4>Tags</h4>
          <div class="tags-list">
            {entry.data.tags.map(tag => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        </div>
        
        {entry.data.connections && entry.data.connections.length > 0 && (
          <div class="detail-section">
            <h4>Connected Concepts</h4>
            <div class="connections-list">
              {entry.data.connections.map(connection => (
                <span class="connection">{connection}</span>
              ))}
            </div>
          </div>
        )}
      </div>
    </div>

    <div class="article-content">
      <Content />
    </div>

    <div class="article-footer">
      <div class="navigation-links">
        <a href="/notes" class="nav-link">← Back to All Notes</a>
      </div>
    </div>
  </article>
</BaseLayout>

<style>
  .note-article {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  .article-header {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 2px solid var(--accent);
  }

  .breadcrumb {
    margin-bottom: 1.5rem;
  }

  .breadcrumb a {
    color: var(--accent);
    text-decoration: none;
    font-weight: 500;
    transition: opacity 0.2s ease;
  }

  .breadcrumb a:hover {
    opacity: 0.8;
  }

  .article-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .meta-badges {
    display: flex;
    gap: 0.5rem;
  }

  .type-badge, .confidence-badge {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-weight: 500;
  }

  .type-badge[data-type="atomic"] {
    background: #e0e7ff;
    color: #3730a3;
  }

  .type-badge[data-type="synthesis"] {
    background: #f0fdf4;
    color: #15803d;
  }

  .type-badge[data-type="question"] {
    background: #fef3c7;
    color: #92400e;
  }

  .type-badge[data-type="connection"] {
    background: #fce7f3;
    color: #be185d;
  }

  .confidence-badge {
    background: var(--bg);
    color: var(--secondary);
    border: 1px solid var(--secondary);
  }

  .article-date {
    font-size: 0.875rem;
    color: var(--secondary);
  }

  .article-title {
    font-family: var(--font-serif);
    font-size: 2.5rem;
    color: var(--primary);
    margin-bottom: 1.5rem;
    line-height: 1.2;
  }

  .article-details {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .detail-section h4 {
    font-size: 0.875rem;
    color: var(--primary);
    margin: 0 0 0.75rem 0;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .tags-list, .connections-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: var(--bg);
    color: var(--secondary);
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    border: 1px solid var(--secondary);
  }

  .connection {
    background: var(--accent);
    color: white;
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
  }

  .article-content {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--primary);
  }

  .article-content :global(h2) {
    font-family: var(--font-serif);
    font-size: 1.75rem;
    color: var(--primary);
    margin: 2.5rem 0 1rem 0;
    line-height: 1.3;
  }

  .article-content :global(h3) {
    font-family: var(--font-serif);
    font-size: 1.375rem;
    color: var(--primary);
    margin: 2rem 0 0.75rem 0;
    line-height: 1.3;
  }

  .article-content :global(h4) {
    font-weight: 600;
    color: var(--primary);
    margin: 1.5rem 0 0.5rem 0;
  }

  .article-content :global(p) {
    margin-bottom: 1.5rem;
  }

  .article-content :global(ul), .article-content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .article-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .article-content :global(strong) {
    font-weight: 600;
    color: var(--primary);
  }

  .article-content :global(em) {
    font-style: italic;
    color: var(--secondary);
  }

  .article-content :global(blockquote) {
    border-left: 3px solid var(--accent);
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--secondary);
  }

  .article-content :global(code) {
    background: var(--surface);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
    color: var(--accent);
  }

  .article-footer {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--secondary);
  }

  .navigation-links {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .nav-link {
    color: var(--accent);
    text-decoration: none;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border: 1px solid var(--accent);
    border-radius: 0.375rem;
    transition: all 0.2s ease;
  }

  .nav-link:hover {
    background: var(--accent);
    color: white;
  }

  @media (max-width: 768px) {
    .note-article {
      padding: 1rem;
    }
    
    .article-title {
      font-size: 2rem;
    }
    
    .article-details {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .article-meta {
      flex-direction: column;
      align-items: flex-start;
    }
    
    .article-content {
      font-size: 1rem;
    }
  }
</style>